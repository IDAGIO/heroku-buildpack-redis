#!/usr/bin/env bash

set -eo pipefail

indent() {
  sed -u 's/^/       /'
}

# Usage: $ set-env key value
set-env() {
  echo "export $1=$2" >> $PROFILE_PATH
}

mktmpdir() {
  dir=$(mktemp -t fakesu-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
VERSION="4.0.9"
PATCH_LEVEL=1
FULL_VERSION="${VERSION}p${PATCH_LEVEL}"
REDIS_BUILD="$(mktmpdir redis)"
INSTALL_DIR="$BUILD_DIR/.heroku/vendor/redis"
PROFILE_PATH="$BUILD_DIR/.profile.d/redis.sh"

MAX_MEMORY=$(cat $ENV_DIR/LOCAL_REDIS_MAX_MEMORY)

mkdir -p $INSTALL_DIR
mkdir -p $(dirname $PROFILE_PATH)
mkdir -p $CACHE_DIR

if [ ! -d $CACHE_DIR/redis_$FULL_VERSION ]; then
	echo "Fetching and installing redis" | indent
	cd $REDIS_BUILD
	curl -OL "http://download.redis.io/releases/redis-$VERSION.tar.gz"
	tar zxvf "redis-$VERSION.tar.gz"
	cd "redis-$VERSION"

  patch -p1 <<EOP
diff --git a/src/server.c b/src/server.c
index d702823..1884a57 100644
--- a/src/server.c
+++ b/src/server.c
@@ -3511,6 +3511,10 @@ static void sigShutdownHandler(int sig) {
     server.shutdown_asap = 1;
 }

+static void sigIgnoreHandler(int sig) {
+  serverLogFromHandler(LL_WARNING, "*** Signal IGNORED ***");
+}
+
 void setupSignalHandlers(void) {
     struct sigaction act;

@@ -3518,7 +3522,7 @@ void setupSignalHandlers(void) {
      * Otherwise, sa_handler is used. */
     sigemptyset(&act.sa_mask);
     act.sa_flags = 0;
-    act.sa_handler = sigShutdownHandler;
+    act.sa_handler = sigIgnoreHandler;
     sigaction(SIGTERM, &act, NULL);
     sigaction(SIGINT, &act, NULL);
EOP

	make
	make PREFIX=$CACHE_DIR/redis_$FULL_VERSION/ install
	cp -r $CACHE_DIR/redis_$FULL_VERSION/* $INSTALL_DIR/
else
	echo "Installing redis from cache" | indent
	cp -r $CACHE_DIR/redis_$FULL_VERSION/* $INSTALL_DIR/
fi

set-env PATH '/app/.heroku/vendor/redis/bin:$PATH'
cat >>$PROFILE_PATH <<EOF
redis-server --bind 127.0.0.1 --save "" --maxmemory $MAX_MEMORY --maxmemory-policy allkeys-lru --daemonize yes
EOF

echo "Done" | indent

